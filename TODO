Last Update: 27 April 2010.

Numbers in [ ] are priorities, 'f' is "distant future".

BUGS:
[1] Rewrite FreeRTOS stack mangling code which seems to be eating my stack.
[1] Try to avoid duplicating what http://www-users.cs.york.ac.uk/~pcc/MCP/index.html are doing.
[1] Fix/debug power saving (Idle Mode) occasional crashing problem.
[2] Refactor UART code to support all 4 UARTs.
[2] Optimize UART code (maybe a ring buffer would be better?).
[2] Test/fix/finish the syscalls interface. Fix reentrancy.
[f] Test/fix ethernet code.

GENERALIZATIONS:
[1] Switch over to the mbed-type register access conventions.
[1] Refactor PLL and WDT code out of main.cpp...
[2] Finish GPIO driver.
[2] FreeRTOS only provides a kernel. We need to supply the rest of the OS.
		Filesystem.
		File-like objects for UARTs as in UNIX.
[2] All the peripheral drivers should be C++-ified and made as API-compatible
    with mbed standard library as is possible and desirable within the context 
    of an RTOS.
[f] Fractional baud rate code is inefficient and takes up a bunch of storage.
[f] Provide bootcode and linker script for LPC1768-based mbed devices. 
[f] All application-level APIs should work the same on either mbed processor type.

ADDITIONS:
[2] Add more standard library and syscall niceities. 
[3] Add mbed local file system support. Some details here: 
		http://mbed.org/users/jsnyder/notebook/elua-preliminary-port/
		http://svn.berlios.de/wsvn/elua/trunk/src/?op=log&rev=0&sc=0&isdir=1
[3] Integrate local FS with syscalls/std. library.
[f] Switch to lwIP instead of uIP (maybe?). uIP is kindof ugly...

ON-CHIP PERIPHERAL DRIVERS:
[1] I2C master (all 3 busses).
[1] SPI master.
[1] ADC.
[1] PWM.
[2] RTC.
[3] USB device with CDC virtual serial port.
[3] DAC.
[3] 1-Wire master.
[f] CAN.
[f] SD/MMC Controller.
[f] USB host.
[f] Other uses of USB device besides CDC virtual serial.
[f] Generalised SSP besides SPI.
[f] I2S/audio

EXTERNAL DEVICE DRIVERS:
[1] Intersil ISL9208 multicell lithium battery analog front end (via I2C).
[1] Linear LTC1960 lithium battery charger and powerpath controller (via SPI).
[1] Temperature sensors (TBD) (via I2C or maybe 1-wire, TBD).

-------------------------------------------------------------------------------
DONE:
[x] Fix/test WDT code.
[x] Fix UART baud rate issue and test fractional baud rate algorithm better.
[x] Check battery-backed RAM wrt memory map/linker script.
[x] Try to tidy up and generalize the IRQ handling mess. Perhaps that 
    crt0.s-based solution was nicer after all. UPDATE: with latest GCC, and no 
	internal compiler errors, __attribute__((interrupt)) seems to be the best
	option.
[x] Fix UART threading/queuing/interrupt(?) reliability issue.

