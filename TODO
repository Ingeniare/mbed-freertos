Last Update: 4 May 2010.

Numbers in [ ] are priorities, 'f' is "distant future".

BUGS:
[1] Finish factoring crt0 code into core-specific and common parts.
[1] Fix KEEP() in linker script wrt ctors/dtors. Fix (any) remaining alignment issues in linker script.
[1] Fix interrupt dis/enable during watchdog feed wrt spurious interrupt appnote.
[1] Try to avoid duplicating what http://www-users.cs.york.ac.uk/~pcc/MCP/index.html are doing.
[1] Write a spurious interrupt handler (http://water.cse.unsw.edu.au/esdk/lpc2/spurious-irq.html).
[2] Ensure debug output printed by abort traps is actually correct (hmmm?).
[2] Refactor UART code to support all 4 UARTs.
[2] Optimize UART code (maybe a ring buffer would be better?).
[2] Test/fix/finish the syscalls interface. Fix reentrancy.
[f] Test/fix ethernet code.

GENERALIZATIONS:
[1] Investigate running everything in USR mode instead of SVC.
[2] Finish GPIO driver.
[2] Integrate CMSIS-style SystemInit(), NVIC_SetVector() and clock idioms.
[2] FreeRTOS only provides a kernel. We need to supply the rest of the OS.
		Filesystem.
		File-like objects for peripherals as in UNIX.
		Debug support (ideally a GDB server/monitor of some kind).
[2] All the peripheral drivers should be C++-ified and made as API-compatible
    with mbed standard library as is possible and desirable within the context
    of an RTOS.
[f] Fractional baud rate code is inefficient and takes up a bunch of storage.
[f] Provide bootcode support for LPC1768-based mbed devices.
[f] All application-level APIs should work the same on either mbed processor type.

ADDITIONS:
[2] Add more standard library and syscall niceities.
[3] Add mbed local file system support. Some details here:
		http://mbed.org/users/jsnyder/notebook/elua-preliminary-port/
		http://svn.berlios.de/wsvn/elua/trunk/src/?op=log&rev=0&sc=0&isdir=1
[3] Integrate local FS with syscalls/std. library.
[f] Switch to lwIP instead of uIP (maybe?). uIP is kindof ugly...

ON-CHIP PERIPHERAL DRIVERS:
[1] I2C master (all 3 buses).
[1] SPI master.
[1] ADC.
[1] PWM.
[2] RTC.
[3] USB device with CDC virtual serial port.
[3] DAC.
[3] 1-Wire master.
[f] CAN.
[f] SD/MMC Controller.
[f] USB host/OTG.
[f] Other uses of USB device besides CDC virtual serial.
[f] Generalised SSP besides SPI.
[f] I2S/audio

EXTERNAL DEVICE DRIVERS:
[1] Intersil ISL9208 multicell lithium battery analog front end (via I2C).
[1] Linear LTC1960 lithium battery charger and powerpath controller (via SPI).
[1] Temperature sensors (TBD) (via I2C or maybe 1-wire, TBD).

